package hu.anzek.backend.service;


import hu.anzek.backend.datalayer.model.Post;
import hu.anzek.backend.datalayer.repository.PostRepository;
import java.util.List;
import java.util.Optional;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * D3. harmadik deklaráció<br>
 * @author User
 */
@Service
public class PostRepo {

    // Entity -managerrel is lehetséges mindez, 
    // de ezzel a JPA eszközzel sokkal összetettebb feladatok jelent - igaz cserébe jóval gyorsabb végrehajtást!
    // viszont az egyes folyamatokra külön paraméterezések szükségesek...:
    //  @PersistenceContext
    //  private EntityManager entityManager;  
    
    @Autowired 
    private PostRepository postRepository;

    public List<Post> gyujtsdleOsszeset() {
        // A JPA-segítségével lekérjük az összes "Post" entitást az adatbázisból.
        // megfelel ennek a SQL : "SELECT * FROM post"
        return postRepository.findAll();
    }     

    public Post keressIdAzonositora(Long id) {
        Optional<Post> opPost = postRepository.findById(id);
        return opPost.orElse(null);
    }
    
    private Post save(Post post) {
        return postRepository.save(post);
    }
    
    private void deleteById(Long id){
        postRepository.deleteById(id);
    }   
    
    /**
     * Ez a metódus hozzáad, módosít, vagy töröl egy "posztolt" értéket a primary-kulcs szerint, (cím és tartalom)<br>
     * @param post a teljes entitás, vagyis a múveletre váró rekord maga!<br>
     * @param dbMuvelet a DataBase  művelet (ENUM)törlés = -1; update = 0; insert == 1<br>
     * @return vagy null értéket ad vissza sikertelen, vagy törlési műveletet követően, vagy a teljes rekordot (insert/update) esetében<br>
     * @throws hu.anzek.backend.service.OwnException a JQL-MEGRE parancs végrehajtása problémába ütközik<br>
     */
    public Post merge(Post post, DBMUVELET dbMuvelet) throws OwnException{                        
        //ez itt a hibakezlő IF blokk:
        // 1, ha törlés, vagy update lenne:
        if(dbMuvelet.getLevel() <= 0){
            // ha nincs mire hivatkozni, gond van...
            // vagy ha van ugyan ID, csak éppen nem található ilyen, akkor is gond lesz!
            if((post.getId() == null) || ((post.getId() != null) && (this.keressIdAzonositora(post.getId()) == null))){       
                throw new OwnException("JQL-MERGE-" + dbMuvelet.name() + " vegrehajtasashoz nincs, vagy nincs ilyen vegrehajthato ID !");
            }
        }else{
            // 2, ha insert lenne:
            // akkor alapértelmezésben AUTOINC/AUTOGENERATED a mező... 
            // - márpedig szinte minden esetben GENERÁLJUK - akkor ugye nem is küldhetünk be ID-t 
            // -> így, ha NULL, akkor az tökéletes - nincs hiba!
            if(post.getId() != null){ 
                // - - viszont H2-tesztnél előfordulhat, hogy mégis adunk meg ID-t a teszt céljából:
                // - - - nos ekkor meg az a kritérium, hogy bármi lehet az, csak egyedi legyen (ezért vizsáljuk alább, a létezőségre)!
                if(this.keressIdAzonositora(post.getId()) != null){
                    throw new OwnException("JQL-MERGE-" + dbMuvelet.name() + " vegrehajtasasahoz nem adhat meg ID-t (csak H2-teszt esetben, vagy MySQL-UPDATE eseten)!");
                }
            }
        }
        
        // ha fentebb nem dobott semmelyik ág kivételt, akkor végrehajtható lesz:
        // az adbatbázis-művelet:
        Post postRet = null;
        System.out.print("JQL-MERGE-" + dbMuvelet.name() + " ");
        // ha törölni kell vagy update-olni:
        if(dbMuvelet.getLevel() <= 0){
            // ez nem kell, mert a saját hibakezelő lekezeli: if(this.keressIdAzonositora(post.getId()) != null){
            if(dbMuvelet.getLevel() == 0){
                postRet = this.save(post);
                System.out.println("isSucces");
            }else{
               this.deleteById(post.getId());
               System.out.println("isSucces");
            }            
        }else{
            //  ez nem kell, mert a saját hibakezelő lekezeli: if( this.keressIdAzonositora(post.getId()) == null){
            postRet = this.save(post);
            System.out.println("isSucces");
        }
 
        return postRet;
    }   
}
